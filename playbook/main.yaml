- name: Config vars
  hosts: 127.0.0.1
  become: yes
  vars_prompt:
  - name: telegram_token
    prompt: "Enter Telegram token"
    private: no
  - name : password_RCON
    prompt: "Enter the password for RCON"
    private: no

  tasks:

  - name: Print all available facts
    ansible.builtin.debug:
      var: ansible_facts
    tags: vars

  - name: Install pip
    ansible.builtin.apt:
      name: pip
      state: latest
      update_cache: yes
  
  - name: pip install rcon pytelegrambotapi
    ansible.builtin.shell:
      cmd: sudo pip3 install rcon pytelegrambotapi

  - name: Install python pytelegrambotapi
    ansible.builtin.pip:
      name:  pytelegrambotapi
      break_system_packages: true
      umask: "0022"
    become_method: sudo
    become: True

  - name: Install python rcon
    ansible.builtin.pip:
      name:  rcon
      break_system_packages: true
      umask: "0022"
    become_method: sudo
    become: True

  - name: Create folder factorio home
    ansible.builtin.file:
      path: /home/{{ ansible_env['SUDO_USER'] }}/factorio
      owner: "{{ ansible_env['SUDO_USER'] }}"
      group: "{{ ansible_env['SUDO_USER'] }}"
      mode: '0764'
      state: directory

  - name: Create folder factorio home
    ansible.builtin.file:
      path: /opt/factorio
      owner: "{{ ansible_env['SUDO_USER'] }}"
      group: "{{ ansible_env['SUDO_USER'] }}"
      mode: '0764'
      state: directory
  
  - name: Create folder factorio mods
    ansible.builtin.file:
      path: /opt/factorio/mods
      owner: "{{ ansible_env['SUDO_USER'] }}"
      group: "{{ ansible_env['SUDO_USER'] }}"
      mode: '0764'
      state: directory

  - name: Create folder server version
    ansible.builtin.file:
      path: /opt/factorio_server_version
      owner: "{{ ansible_env['SUDO_USER'] }}"
      group: "{{ ansible_env['SUDO_USER'] }}"
      mode: '0764'
      state: directory

  - name: Download factorio server
    ansible.builtin.get_url:
      url: https://www.factorio.com/get-download/{{ server_version }}/headless/linux64
      dest: /opt/factorio_server_version/factorio_{{ server_version }}_server.tar.gz
      mode: '0440'
      owner: "{{ ansible_env['SUDO_USER'] }}"
    tags: update

  - name: Unarchive\update server
    ansible.builtin.unarchive:
      src: /opt/factorio_server_version/factorio_{{ server_version }}_server.tar.gz
      dest: /opt
      remote_src: no
      owner: "{{ ansible_env['SUDO_USER'] }}"
    tags: update

  - name: +x bin factorio server
    ansible.builtin.file:
      path: /opt/factorio/bin/x64/factorio
      owner: "{{ ansible_env['SUDO_USER'] }}"
      group: "{{ ansible_env['SUDO_USER'] }}"
      mode: +x
    tags: update

  - name: Gen parameters.txt
    ansible.builtin.template:
      src: conf_bot/parameters.j2
      dest: /home/{{ ansible_env['SUDO_USER'] }}/factorio/tg_bot_factorio/data/parameters.txt
    tags: update
    
  - name: Gen daemon factorio_server
    ansible.builtin.template:
      src: daemon/factorio_server.j2
      dest: /etc/systemd/system/factorio_server.service
    tags: update

  - name: Gen daemon tg_bot 
    ansible.builtin.template:
      src: daemon/tg_bot_factorio.j2
      dest: /etc/systemd/user/tg_bot_factorio.service
    tags: update

  - name: Restart service bot
    ansible.builtin.systemd_service:
      daemon_reload: true
    tags: update

  - name: Restart service server
    ansible.builtin.systemd_service:
      state: restarted
      name: factorio_server.service
    tags: update